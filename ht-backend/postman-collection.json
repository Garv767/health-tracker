{
  "info": {
    "name": "Health Tracker Backend API",
    "description": "Comprehensive API collection for testing the Health Tracker Backend with session-based authentication",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "testUsername",
      "value": "testuser_{{$randomInt}}",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "test{{$randomInt}}@example.com",
      "type": "string"
    },
    {
      "key": "testPassword",
      "value": "TestPass123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('username');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('createdAt');",
                  "    pm.expect(jsonData).to.not.have.property('password');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{testUsername}}\",\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('username');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});",
                  "",
                  "pm.test(\"Session cookie is set\", function () {",
                  "    pm.expect(pm.cookies.has('JSESSIONID')).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{testUsername}}\",\n  \"password\": \"{{testPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Profile data is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get('testUsername'));",
                  "    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get('testEmail'));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Logout User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Water Intake",
      "item": [
        {
          "name": "Create Water Intake",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has water intake data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('amountLtr');",
                  "    pm.expect(jsonData).to.have.property('date');",
                  "    pm.expect(jsonData).to.have.property('createdAt');",
                  "    pm.collectionVariables.set('waterIntakeId', jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amountLtr\": 0.5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/water",
              "host": ["{{baseUrl}}"],
              "path": ["api", "water"]
            }
          }
        },
        {
          "name": "Get Water Intake History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has pagination structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "    pm.expect(jsonData.page).to.have.property('number');",
                  "    pm.expect(jsonData.page).to.have.property('size');",
                  "    pm.expect(jsonData.page).to.have.property('totalElements');",
                  "    pm.expect(jsonData.page).to.have.property('totalPages');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/water?page=0&size=10&sort=date,desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "water"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sort",
                  "value": "date,desc"
                }
              ]
            }
          }
        },
        {
          "name": "Delete Water Intake",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/water/{{waterIntakeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "water", "{{waterIntakeId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Food Intake",
      "item": [
        {
          "name": "Create Food Intake",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has food intake data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('foodItem');",
                  "    pm.expect(jsonData).to.have.property('calories');",
                  "    pm.expect(jsonData).to.have.property('date');",
                  "    pm.collectionVariables.set('foodIntakeId', jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"foodItem\": \"Apple\",\n  \"calories\": 95\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/food",
              "host": ["{{baseUrl}}"],
              "path": ["api", "food"]
            }
          }
        },
        {
          "name": "Update Food Intake",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Food item was updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.foodItem).to.eql('Large Apple');",
                  "    pm.expect(jsonData.calories).to.eql(120);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"foodItem\": \"Large Apple\",\n  \"calories\": 120\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/food/{{foodIntakeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "food", "{{foodIntakeId}}"]
            }
          }
        },
        {
          "name": "Get Food Intake History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has pagination structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/food?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "food"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Workouts",
      "item": [
        {
          "name": "Create Workout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has workout data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('activity');",
                  "    pm.expect(jsonData).to.have.property('durationMin');",
                  "    pm.expect(jsonData).to.have.property('date');",
                  "    pm.collectionVariables.set('workoutId', jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"activity\": \"Running\",\n  \"durationMin\": 30,\n  \"caloriesBurned\": 300\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/workouts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "workouts"]
            }
          }
        },
        {
          "name": "Update Workout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Workout was updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.durationMin).to.eql(45);",
                  "    pm.expect(jsonData.caloriesBurned).to.eql(450);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"activity\": \"Running\",\n  \"durationMin\": 45,\n  \"caloriesBurned\": 450\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/workouts/{{workoutId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "workouts", "{{workoutId}}"]
            }
          }
        },
        {
          "name": "Get Workout History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has pagination structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/workouts?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "workouts"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Health Index",
      "item": [
        {
          "name": "Get Current Health Index",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has health index data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('date');",
                  "    pm.expect(jsonData).to.have.property('healthScore');",
                  "    pm.expect(jsonData.healthScore).to.be.at.least(0);",
                  "    pm.expect(jsonData.healthScore).to.be.at.most(100);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health-index",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health-index"]
            }
          }
        },
        {
          "name": "Get Health Index by Date",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has health index for specific date\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('date');",
                  "    pm.expect(jsonData.date).to.eql('2024-01-15');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health-index/2024-01-15",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health-index", "2024-01-15"]
            }
          }
        },
        {
          "name": "Force Calculate Current Health Index",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Health score was recalculated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('healthScore');",
                  "    pm.expect(jsonData.healthScore).to.be.at.least(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health-index/calculate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health-index", "calculate"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Unauthorized Access (No Session)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Clear all cookies to simulate no session",
                  "pm.cookies.clear();"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Error response format is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData).to.have.property('path');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Invalid Registration Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Validation error details are provided\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('details');",
                  "    pm.expect(jsonData.details).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"ab\",\n  \"email\": \"invalid-email\",\n  \"password\": \"weak\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set up collection variables if not already set",
          "if (!pm.collectionVariables.get('testUsername')) {",
          "    pm.collectionVariables.set('testUsername', 'testuser_' + Math.floor(Math.random() * 10000));",
          "}",
          "if (!pm.collectionVariables.get('testEmail')) {",
          "    pm.collectionVariables.set('testEmail', 'test' + Math.floor(Math.random() * 10000) + '@example.com');",
          "}"
        ]
      }
    }
  ]
}